//@version=4
study("Pump Dump Protection Backtest", shorttitle="PPP_Backtest", overlay=true)

start = input(title="Start", type=input.float, step=0.001, defval=0.02)
increment = input(title="Increment", type=input.float, step=0.001, defval=0.02)
maximum = input(title="Maximum", type=input.float, step=0.01, defval=0.2)
width = input(title="Point Width", type=input.integer, minval=1, defval=2)
rsi_l = input(title="RSI Length", type=input.integer, defval=10)
rsi_bl = input(title="RSI BUY Limit", type=input.integer, defval=70)
rsi_sl = input(title="RSI Sell Limit", type=input.integer, defval=27)
rsi_smabl = input(title="RSI SMA BUY Limit", type=input.integer, defval=65)
rsi_smasl = input(title="RSI SMA Sell Limit", type=input.integer, defval=35)
fastsma = input(title="Fast SMA", type=input.integer, defval=7)
slowsma = input(title="Slow SMA", type=input.integer, defval=25)
highlightStartPoints = input(title="Highlight Start Points ?", type=input.bool, defval=true)
showLabels = input(title="Show Buy/Sell Labels ?", type=input.bool, defval=true)
highlightState = input(title="Highlight State ?", type=input.bool, defval=true)


// INPUT VALUES
src = input(close, title="Source")
rsi = rsi(src, rsi_l)
smoothK = input(3, minval=1)
smoothD = input(3, minval=1)
lengthStoch = input(14, minval=1)
sma9 = sma(src, fastsma)
sma62 = sma(src, slowsma)


// CALCULATING
k = sma(stoch(rsi, rsi, rsi, lengthStoch), smoothK)
d = sma(k, smoothD)
sma_sell = cross(sma9, sma62) and rsi < rsi_smasl
sma_buy = cross(sma62, sma9) and rsi > rsi_smabl

//MACD
_ema_len = input(20, title="EMA length")
_macd_fast = input(12, title="MACD Fast")
_macd_slow = input(26, title="MACD Slow")
_macd_signal_len = input(20, title="MACD Signal length")
_rsi_len = input(14, title="RSI length")
_rsi_signal_len = input(20, title="RSI signal length")
_ema = ema(close, _ema_len)
_macd = ema(close, _macd_fast) - ema(close, _macd_slow)
_macd_signal = ema(_macd, _macd_signal_len)

psar = sar(start, increment, maximum)
dir = psar < close ? 1 : -1

psarColor = dir == 1 ? #3388bb : #fdcc02
psarPlot = plot(psar, title="PSAR", style=plot.style_circles, linewidth=width, color=psarColor, transp=0)

longColor = color.green
shortColor = color.red
noneColor = color.new(color.white, 100)

buySignal = (dir == 1 and dir[1] == -1 and _macd > 0 and rsi > rsi_bl) or (dir == 1 and _macd >0 and rsi > rsi_bl)
plotshape(buySignal and buySignal!=buySignal[1] and highlightStartPoints ? psar : na, title="Long Start", location=location.absolute, style=shape.circle, size=size.tiny, color=longColor, transp=0)
plotshape(buySignal and buySignal!=buySignal[1] and showLabels ? psar : na, title="Buy Label", text="Buy", location=location.absolute, style=shape.labelup, size=size.tiny, color=longColor, textcolor=color.white, transp=0)

sellSignal = (dir == -1 and dir[1] == 1 and _macd < 0 and rsi < rsi_sl) or (dir == -1 and _macd < 0 and rsi < rsi_sl)
plotshape(sellSignal and sellSignal!=sellSignal[1] and highlightStartPoints ? psar : na, title="Short Start", location=location.absolute, style=shape.circle, size=size.tiny, color=shortColor, transp=0)
plotshape(sellSignal and sellSignal!=sellSignal[1] and showLabels ? psar : na, title="Sell Label", text="Sell", location=location.absolute, style=shape.labeldown, size=size.tiny, color=shortColor, textcolor=color.white, transp=0)


plot(sma9, title = "MA9", color = color.green, linewidth = 2)
plot(sma62, title = "MA62", color = color.red, linewidth = 2)

barcolor(cross(sma9, sma62)? color.orange: cross(sma62, sma9) ? color.blue: close < open ? color.red: color.green)

plotshape(sma_buy, title="BUY", text="SMA CROSS BUY", location=location.abovebar, style=shape.labelup, size=size.tiny, color=color.green, textcolor=color.white, transp=0)
plotshape(sma_sell, title="SELL", text="SMA CROSS SELL", location=location.abovebar, style=shape.labelup, size=size.tiny, color=color.red, textcolor=color.white, transp=0)

midPricePlot = plot(ohlc4, title="", style=plot.style_circles, linewidth=0)

fillColor = highlightState ? (dir == 1 ? longColor : shortColor) : noneColor
fill(midPricePlot, psarPlot, title="Trade State Filling", color=fillColor)

changeCond = dir != dir[1]
alertcondition(changeCond, title="PSAR Direction Change", message="PSAR has changed direction!")

alertcondition(buySignal, title="PSAR Long", message="PSAR Long")
alertcondition(sellSignal, title="PSAR Short", message="PSAR Sell")